#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectManagementSystem_v_0_1.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PMS")]
	public partial class ProjectManagementDatabaseClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPMemEmailList(PMemEmailList instance);
    partial void UpdatePMemEmailList(PMemEmailList instance);
    partial void DeletePMemEmailList(PMemEmailList instance);
    partial void InsertWorksOn(WorksOn instance);
    partial void UpdateWorksOn(WorksOn instance);
    partial void DeleteWorksOn(WorksOn instance);
    partial void InsertPMemPhoneList(PMemPhoneList instance);
    partial void UpdatePMemPhoneList(PMemPhoneList instance);
    partial void DeletePMemPhoneList(PMemPhoneList instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjectMember(ProjectMember instance);
    partial void UpdateProjectMember(ProjectMember instance);
    partial void DeleteProjectMember(ProjectMember instance);
    partial void InsertTasks(Tasks instance);
    partial void UpdateTasks(Tasks instance);
    partial void DeleteTasks(Tasks instance);
    partial void InsertFinishedProject(FinishedProject instance);
    partial void UpdateFinishedProject(FinishedProject instance);
    partial void DeleteFinishedProject(FinishedProject instance);
    partial void InsertFinishedTasks(FinishedTasks instance);
    partial void UpdateFinishedTasks(FinishedTasks instance);
    partial void DeleteFinishedTasks(FinishedTasks instance);
    #endregion
		
		public ProjectManagementDatabaseClassesDataContext() : 
				base(global::ProjectManagementSystem_v_0_1.Properties.Settings.Default.PMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectManagementDatabaseClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectManagementDatabaseClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectManagementDatabaseClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectManagementDatabaseClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PMemEmailList> PMemEmailLists
		{
			get
			{
				return this.GetTable<PMemEmailList>();
			}
		}
		
		public System.Data.Linq.Table<WorksOn> WorksOns
		{
			get
			{
				return this.GetTable<WorksOn>();
			}
		}
		
		public System.Data.Linq.Table<PMemPhoneList> PMemPhoneLists
		{
			get
			{
				return this.GetTable<PMemPhoneList>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProjectMember> ProjectMembers
		{
			get
			{
				return this.GetTable<ProjectMember>();
			}
		}
		
		public System.Data.Linq.Table<Tasks> Tasks
		{
			get
			{
				return this.GetTable<Tasks>();
			}
		}
		
		public System.Data.Linq.Table<FinishedProject> FinishedProjects
		{
			get
			{
				return this.GetTable<FinishedProject>();
			}
		}
		
		public System.Data.Linq.Table<FinishedTasks> FinishedTasks
		{
			get
			{
				return this.GetTable<FinishedTasks>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.checkUserPassword")]
		public int checkUserPassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetErrorMessage")]
		public ISingleResult<usp_GetErrorMessageResult> usp_GetErrorMessage()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_GetErrorMessageResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deletePMemEmailList")]
		public int deletePMemEmailList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNR", DbType="Int")] System.Nullable<int> pNR, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(1)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNR, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deletePMemPhoneList")]
		public int deletePMemPhoneList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNR", DbType="Int")] System.Nullable<int> pNR, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNr", DbType="Int")] System.Nullable<int> phoneNr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNR, phoneNr);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteProject")]
		public int deleteProject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNo", DbType="Int")] System.Nullable<int> pNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteProjectMember")]
		public int deleteProjectMember([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNR", DbType="Int")] System.Nullable<int> pNR)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNR);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteTask")]
		public int deleteTask([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TNo", DbType="Int")] System.Nullable<int> tNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteWorksOn")]
		public int deleteWorksOn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNR", DbType="Int")] System.Nullable<int> pNR, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TNo", DbType="Int")] System.Nullable<int> tNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNo", DbType="Int")] System.Nullable<int> pNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNR, tNo, pNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getAllPmem")]
		public ISingleResult<ProjectMember> getAllPmem()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProjectMember>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getAllPNoFromProject")]
		public ISingleResult<Project> getAllPNoFromProject()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Project>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getAllProject")]
		public ISingleResult<Project> getAllProject()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Project>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getAllTask")]
		public ISingleResult<Tasks> getAllTask()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Tasks>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getCurrentUser")]
		public ISingleResult<getCurrentUserResult> getCurrentUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((ISingleResult<getCurrentUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getPMemPhoneList")]
		public ISingleResult<getPMemPhoneListResult> getPMemPhoneList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNR", DbType="Int")] System.Nullable<int> pNR, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNr", DbType="Int")] System.Nullable<int> phoneNr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNR, phoneNr);
			return ((ISingleResult<getPMemPhoneListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getProjectMember")]
		public ISingleResult<getProjectMemberResult> getProjectMember([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNR", DbType="Int")] System.Nullable<int> pNR)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNR);
			return ((ISingleResult<getProjectMemberResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getProjectMemebersForCurrentProject")]
		public ISingleResult<ProjectMember> getProjectMemebersForCurrentProject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pno", DbType="Int")] System.Nullable<int> pno)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pno);
			return ((ISingleResult<ProjectMember>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getProjectsForCurrentUser")]
		public ISingleResult<Project> getProjectsForCurrentUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((ISingleResult<Project>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getTaskByProjectUser")]
		public ISingleResult<Tasks> getTaskByProjectUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string usn, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pno)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usn, pno);
			return ((ISingleResult<Tasks>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getWorksOn")]
		public ISingleResult<WorksOn> getWorksOn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNR", DbType="Int")] System.Nullable<int> pNR)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pNR);
			return ((ISingleResult<WorksOn>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setPMemEmailList")]
		public int setPMemEmailList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pnr", DbType="Int")] System.Nullable<int> pnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(100)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pnr, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setPMemPhoneList")]
		public int setPMemPhoneList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pnr", DbType="Int")] System.Nullable<int> pnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNr", DbType="Int")] System.Nullable<int> phoneNr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pnr, phoneNr);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setProject")]
		public int setProject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pno", DbType="Int")] System.Nullable<int> pno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PName", DbType="VarChar(100)")] string pName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PBudget", DbType="Int")] System.Nullable<int> pBudget, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PDesc", DbType="VarChar(100)")] string pDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PDeadline", DbType="Date")] System.Nullable<System.DateTime> pDeadline, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectLeader", DbType="Int")] System.Nullable<int> projectLeader)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pno, pName, pBudget, pDesc, pDeadline, projectLeader);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setProjectMember")]
		public int setProjectMember([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pnr", DbType="Int")] System.Nullable<int> pnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Forename", DbType="VarChar(100)")] string forename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(100)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MUsername", DbType="VarChar(100)")] string mUsername, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MPassword", DbType="VarChar(100)")] string mPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MRole", DbType="VarChar(100)")] string mRole, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MPasswordSalt", DbType="VarChar(100)")] string mPasswordSalt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserType", DbType="VarChar(100)")] string userType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pnr, forename, surname, mUsername, mPassword, mRole, mPasswordSalt, userType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setTask")]
		public int setTask([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TNo", DbType="Int")] System.Nullable<int> tNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNo", DbType="Int")] System.Nullable<int> pNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TName", DbType="VarChar(100)")] string tName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TDesc", DbType="VarChar(100)")] string tDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TDeadline", DbType="Date")] System.Nullable<System.DateTime> tDeadline)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tNo, pNo, tName, tDesc, tDeadline);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.setWorksOn")]
		public int setWorksOn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pnr", DbType="Int")] System.Nullable<int> pnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TNo", DbType="Int")] System.Nullable<int> tNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNo", DbType="Int")] System.Nullable<int> pNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pnr, tNo, pNo, startDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updatePMemEmailList")]
		public int updatePMemEmailList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldPnr", DbType="Int")] System.Nullable<int> oldPnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldEmail", DbType="VarChar(100)")] string oldEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pnr", DbType="Int")] System.Nullable<int> pnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(100)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldPnr, oldEmail, pnr, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updatePMemPhoneList")]
		public int updatePMemPhoneList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldPnr", DbType="Int")] System.Nullable<int> oldPnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldPhoneNr", DbType="Int")] System.Nullable<int> oldPhoneNr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pnr", DbType="Int")] System.Nullable<int> pnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNr", DbType="Int")] System.Nullable<int> phoneNr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldPnr, oldPhoneNr, pnr, phoneNr);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateProject")]
		public int updateProject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pno", DbType="Int")] System.Nullable<int> pno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PName", DbType="VarChar(100)")] string pName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PBudget", DbType="Int")] System.Nullable<int> pBudget, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PDesc", DbType="VarChar(100)")] string pDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PDeadline", DbType="Date")] System.Nullable<System.DateTime> pDeadline, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectLeaderPnr", DbType="Int")] System.Nullable<int> projectLeaderPnr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pno, pName, pBudget, pDesc, pDeadline, projectLeaderPnr);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateProjectMember")]
		public int updateProjectMember([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pnr", DbType="Int")] System.Nullable<int> pnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Forename", DbType="VarChar(100)")] string forename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(100)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MUsername", DbType="VarChar(100)")] string mUsername, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MPassword", DbType="VarChar(100)")] string mPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MRole", DbType="VarChar(100)")] string mRole)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pnr, forename, surname, mUsername, mPassword, mRole);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateTask")]
		public int updateTask([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TNo", DbType="Int")] System.Nullable<int> tNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PNo", DbType="Int")] System.Nullable<int> pNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TName", DbType="VarChar(100)")] string tName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TDesc", DbType="VarChar(100)")] string tDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TDeadline", DbType="Date")] System.Nullable<System.DateTime> tDeadline)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tNo, pNo, tName, tDesc, tDeadline);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getProject")]
		public ISingleResult<Project> getProject()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Project>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateWorksOn")]
		public ISingleResult<updateWorksOnResult> updateWorksOn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pnr", DbType="Int")] System.Nullable<int> pnr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tno", DbType="Int")] System.Nullable<int> tno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pno", DbType="Int")] System.Nullable<int> pno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tnoIn, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pnoIn, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> startDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pnr, tno, pno, tnoIn, pnoIn, startDate);
			return ((ISingleResult<updateWorksOnResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getTask")]
		public ISingleResult<Tasks> getTask()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Tasks>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getHighestTno")]
		public ISingleResult<getHighestTnoResult1> getHighestTno()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getHighestTnoResult1>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getHighestPno")]
		public ISingleResult<getHighestPnoResult> getHighestPno()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getHighestPnoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.finishedProjectsForCurrentUser")]
		public ISingleResult<FinishedProject> finishedProjectsForCurrentUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((ISingleResult<FinishedProject>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getUserNameWithPnr")]
		public ISingleResult<ProjectMember> getUserNameWithPnr([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pnr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pnr);
			return ((ISingleResult<ProjectMember>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PMemEmailList")]
	public partial class PMemEmailList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PNR;
		
		private string _Email;
		
		private EntityRef<ProjectMember> _ProjectMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPNRChanging(int value);
    partial void OnPNRChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public PMemEmailList()
		{
			this._ProjectMember = default(EntityRef<ProjectMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					if (this._ProjectMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_PMemEmailList", Storage="_ProjectMember", ThisKey="PNR", OtherKey="PNR", IsForeignKey=true)]
		public ProjectMember ProjectMember
		{
			get
			{
				return this._ProjectMember.Entity;
			}
			set
			{
				ProjectMember previousValue = this._ProjectMember.Entity;
				if (((previousValue != value) 
							|| (this._ProjectMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectMember.Entity = null;
						previousValue.PMemEmailLists.Remove(this);
					}
					this._ProjectMember.Entity = value;
					if ((value != null))
					{
						value.PMemEmailLists.Add(this);
						this._PNR = value.PNR;
					}
					else
					{
						this._PNR = default(int);
					}
					this.SendPropertyChanged("ProjectMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorksOn")]
	public partial class WorksOn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PNR;
		
		private int _TNo;
		
		private int _PNo;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<ProjectMember> _ProjectMember;
		
		private EntityRef<Tasks> _Tasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPNRChanging(int value);
    partial void OnPNRChanged();
    partial void OnTNoChanging(int value);
    partial void OnTNoChanged();
    partial void OnPNoChanging(int value);
    partial void OnPNoChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    #endregion
		
		public WorksOn()
		{
			this._Project = default(EntityRef<Project>);
			this._ProjectMember = default(EntityRef<ProjectMember>);
			this._Tasks = default(EntityRef<Tasks>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					if (this._ProjectMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TNo
		{
			get
			{
				return this._TNo;
			}
			set
			{
				if ((this._TNo != value))
				{
					if (this._Tasks.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTNoChanging(value);
					this.SendPropertyChanging();
					this._TNo = value;
					this.SendPropertyChanged("TNo");
					this.OnTNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PNo
		{
			get
			{
				return this._PNo;
			}
			set
			{
				if ((this._PNo != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPNoChanging(value);
					this.SendPropertyChanging();
					this._PNo = value;
					this.SendPropertyChanged("PNo");
					this.OnPNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_WorksOn", Storage="_Project", ThisKey="PNo", OtherKey="PNo", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.WorksOns.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.WorksOns.Add(this);
						this._PNo = value.PNo;
					}
					else
					{
						this._PNo = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_WorksOn", Storage="_ProjectMember", ThisKey="PNR", OtherKey="PNR", IsForeignKey=true)]
		public ProjectMember ProjectMember
		{
			get
			{
				return this._ProjectMember.Entity;
			}
			set
			{
				ProjectMember previousValue = this._ProjectMember.Entity;
				if (((previousValue != value) 
							|| (this._ProjectMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectMember.Entity = null;
						previousValue.WorksOns.Remove(this);
					}
					this._ProjectMember.Entity = value;
					if ((value != null))
					{
						value.WorksOns.Add(this);
						this._PNR = value.PNR;
					}
					else
					{
						this._PNR = default(int);
					}
					this.SendPropertyChanged("ProjectMember");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tasks_WorksOn", Storage="_Tasks", ThisKey="TNo", OtherKey="TNo", IsForeignKey=true)]
		public Tasks Tasks
		{
			get
			{
				return this._Tasks.Entity;
			}
			set
			{
				Tasks previousValue = this._Tasks.Entity;
				if (((previousValue != value) 
							|| (this._Tasks.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tasks.Entity = null;
						previousValue.WorksOns.Remove(this);
					}
					this._Tasks.Entity = value;
					if ((value != null))
					{
						value.WorksOns.Add(this);
						this._TNo = value.TNo;
					}
					else
					{
						this._TNo = default(int);
					}
					this.SendPropertyChanged("Tasks");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PMemPhoneList")]
	public partial class PMemPhoneList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PNR;
		
		private int _PhoneNr;
		
		private EntityRef<ProjectMember> _ProjectMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPNRChanging(int value);
    partial void OnPNRChanged();
    partial void OnPhoneNrChanging(int value);
    partial void OnPhoneNrChanged();
    #endregion
		
		public PMemPhoneList()
		{
			this._ProjectMember = default(EntityRef<ProjectMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					if (this._ProjectMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNr", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PhoneNr
		{
			get
			{
				return this._PhoneNr;
			}
			set
			{
				if ((this._PhoneNr != value))
				{
					this.OnPhoneNrChanging(value);
					this.SendPropertyChanging();
					this._PhoneNr = value;
					this.SendPropertyChanged("PhoneNr");
					this.OnPhoneNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_PMemPhoneList", Storage="_ProjectMember", ThisKey="PNR", OtherKey="PNR", IsForeignKey=true)]
		public ProjectMember ProjectMember
		{
			get
			{
				return this._ProjectMember.Entity;
			}
			set
			{
				ProjectMember previousValue = this._ProjectMember.Entity;
				if (((previousValue != value) 
							|| (this._ProjectMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectMember.Entity = null;
						previousValue.PMemPhoneLists.Remove(this);
					}
					this._ProjectMember.Entity = value;
					if ((value != null))
					{
						value.PMemPhoneLists.Add(this);
						this._PNR = value.PNR;
					}
					else
					{
						this._PNR = default(int);
					}
					this.SendPropertyChanged("ProjectMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PNo;
		
		private string _PName;
		
		private int _PBudget;
		
		private string _PDesc;
		
		private System.DateTime _PDeadline;
		
		private System.Nullable<int> _ProjectLeaderPNR;
		
		private EntitySet<WorksOn> _WorksOns;
		
		private EntitySet<Tasks> _Tasks;
		
		private EntityRef<ProjectMember> _ProjectMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPNoChanging(int value);
    partial void OnPNoChanged();
    partial void OnPNameChanging(string value);
    partial void OnPNameChanged();
    partial void OnPBudgetChanging(int value);
    partial void OnPBudgetChanged();
    partial void OnPDescChanging(string value);
    partial void OnPDescChanged();
    partial void OnPDeadlineChanging(System.DateTime value);
    partial void OnPDeadlineChanged();
    partial void OnProjectLeaderPNRChanging(System.Nullable<int> value);
    partial void OnProjectLeaderPNRChanged();
    #endregion
		
		public Project()
		{
			this._WorksOns = new EntitySet<WorksOn>(new Action<WorksOn>(this.attach_WorksOns), new Action<WorksOn>(this.detach_WorksOns));
			this._Tasks = new EntitySet<Tasks>(new Action<Tasks>(this.attach_Tasks), new Action<Tasks>(this.detach_Tasks));
			this._ProjectMember = default(EntityRef<ProjectMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PNo
		{
			get
			{
				return this._PNo;
			}
			set
			{
				if ((this._PNo != value))
				{
					this.OnPNoChanging(value);
					this.SendPropertyChanging();
					this._PNo = value;
					this.SendPropertyChanged("PNo");
					this.OnPNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PName
		{
			get
			{
				return this._PName;
			}
			set
			{
				if ((this._PName != value))
				{
					this.OnPNameChanging(value);
					this.SendPropertyChanging();
					this._PName = value;
					this.SendPropertyChanged("PName");
					this.OnPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBudget", DbType="Int NOT NULL")]
		public int PBudget
		{
			get
			{
				return this._PBudget;
			}
			set
			{
				if ((this._PBudget != value))
				{
					this.OnPBudgetChanging(value);
					this.SendPropertyChanging();
					this._PBudget = value;
					this.SendPropertyChanged("PBudget");
					this.OnPBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDesc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PDesc
		{
			get
			{
				return this._PDesc;
			}
			set
			{
				if ((this._PDesc != value))
				{
					this.OnPDescChanging(value);
					this.SendPropertyChanging();
					this._PDesc = value;
					this.SendPropertyChanged("PDesc");
					this.OnPDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDeadline", DbType="Date NOT NULL")]
		public System.DateTime PDeadline
		{
			get
			{
				return this._PDeadline;
			}
			set
			{
				if ((this._PDeadline != value))
				{
					this.OnPDeadlineChanging(value);
					this.SendPropertyChanging();
					this._PDeadline = value;
					this.SendPropertyChanged("PDeadline");
					this.OnPDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectLeaderPNR", DbType="Int")]
		public System.Nullable<int> ProjectLeaderPNR
		{
			get
			{
				return this._ProjectLeaderPNR;
			}
			set
			{
				if ((this._ProjectLeaderPNR != value))
				{
					if (this._ProjectMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectLeaderPNRChanging(value);
					this.SendPropertyChanging();
					this._ProjectLeaderPNR = value;
					this.SendPropertyChanged("ProjectLeaderPNR");
					this.OnProjectLeaderPNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_WorksOn", Storage="_WorksOns", ThisKey="PNo", OtherKey="PNo")]
		public EntitySet<WorksOn> WorksOns
		{
			get
			{
				return this._WorksOns;
			}
			set
			{
				this._WorksOns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Tasks", Storage="_Tasks", ThisKey="PNo", OtherKey="PNo")]
		public EntitySet<Tasks> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_Project", Storage="_ProjectMember", ThisKey="ProjectLeaderPNR", OtherKey="PNR", IsForeignKey=true)]
		public ProjectMember ProjectMember
		{
			get
			{
				return this._ProjectMember.Entity;
			}
			set
			{
				ProjectMember previousValue = this._ProjectMember.Entity;
				if (((previousValue != value) 
							|| (this._ProjectMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectMember.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._ProjectMember.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ProjectLeaderPNR = value.PNR;
					}
					else
					{
						this._ProjectLeaderPNR = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProjectMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorksOns(WorksOn entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_WorksOns(WorksOn entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Tasks(Tasks entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Tasks(Tasks entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectMember")]
	public partial class ProjectMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PNR;
		
		private string _Forename;
		
		private string _Surname;
		
		private string _MUsername;
		
		private string _MPassword;
		
		private string _MRole;
		
		private string _PasswordSalt;
		
		private string _UserType;
		
		private EntitySet<PMemEmailList> _PMemEmailLists;
		
		private EntitySet<WorksOn> _WorksOns;
		
		private EntitySet<PMemPhoneList> _PMemPhoneLists;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<FinishedProject> _FinishedProjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPNRChanging(int value);
    partial void OnPNRChanged();
    partial void OnForenameChanging(string value);
    partial void OnForenameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnMUsernameChanging(string value);
    partial void OnMUsernameChanged();
    partial void OnMPasswordChanging(string value);
    partial void OnMPasswordChanged();
    partial void OnMRoleChanging(string value);
    partial void OnMRoleChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public ProjectMember()
		{
			this._PMemEmailLists = new EntitySet<PMemEmailList>(new Action<PMemEmailList>(this.attach_PMemEmailLists), new Action<PMemEmailList>(this.detach_PMemEmailLists));
			this._WorksOns = new EntitySet<WorksOn>(new Action<WorksOn>(this.attach_WorksOns), new Action<WorksOn>(this.detach_WorksOns));
			this._PMemPhoneLists = new EntitySet<PMemPhoneList>(new Action<PMemPhoneList>(this.attach_PMemPhoneLists), new Action<PMemPhoneList>(this.detach_PMemPhoneLists));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._FinishedProjects = new EntitySet<FinishedProject>(new Action<FinishedProject>(this.attach_FinishedProjects), new Action<FinishedProject>(this.detach_FinishedProjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this.OnPNRChanging(value);
					this.SendPropertyChanging();
					this._PNR = value;
					this.SendPropertyChanged("PNR");
					this.OnPNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forename", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Forename
		{
			get
			{
				return this._Forename;
			}
			set
			{
				if ((this._Forename != value))
				{
					this.OnForenameChanging(value);
					this.SendPropertyChanging();
					this._Forename = value;
					this.SendPropertyChanged("Forename");
					this.OnForenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUsername", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MUsername
		{
			get
			{
				return this._MUsername;
			}
			set
			{
				if ((this._MUsername != value))
				{
					this.OnMUsernameChanging(value);
					this.SendPropertyChanging();
					this._MUsername = value;
					this.SendPropertyChanged("MUsername");
					this.OnMUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPassword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MPassword
		{
			get
			{
				return this._MPassword;
			}
			set
			{
				if ((this._MPassword != value))
				{
					this.OnMPasswordChanging(value);
					this.SendPropertyChanging();
					this._MPassword = value;
					this.SendPropertyChanged("MPassword");
					this.OnMPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRole", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MRole
		{
			get
			{
				return this._MRole;
			}
			set
			{
				if ((this._MRole != value))
				{
					this.OnMRoleChanging(value);
					this.SendPropertyChanging();
					this._MRole = value;
					this.SendPropertyChanged("MRole");
					this.OnMRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_PMemEmailList", Storage="_PMemEmailLists", ThisKey="PNR", OtherKey="PNR")]
		public EntitySet<PMemEmailList> PMemEmailLists
		{
			get
			{
				return this._PMemEmailLists;
			}
			set
			{
				this._PMemEmailLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_WorksOn", Storage="_WorksOns", ThisKey="PNR", OtherKey="PNR")]
		public EntitySet<WorksOn> WorksOns
		{
			get
			{
				return this._WorksOns;
			}
			set
			{
				this._WorksOns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_PMemPhoneList", Storage="_PMemPhoneLists", ThisKey="PNR", OtherKey="PNR")]
		public EntitySet<PMemPhoneList> PMemPhoneLists
		{
			get
			{
				return this._PMemPhoneLists;
			}
			set
			{
				this._PMemPhoneLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_Project", Storage="_Projects", ThisKey="PNR", OtherKey="ProjectLeaderPNR")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_FinishedProject", Storage="_FinishedProjects", ThisKey="PNR", OtherKey="ProjectLeaderPNR")]
		public EntitySet<FinishedProject> FinishedProjects
		{
			get
			{
				return this._FinishedProjects;
			}
			set
			{
				this._FinishedProjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PMemEmailLists(PMemEmailList entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = this;
		}
		
		private void detach_PMemEmailLists(PMemEmailList entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = null;
		}
		
		private void attach_WorksOns(WorksOn entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = this;
		}
		
		private void detach_WorksOns(WorksOn entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = null;
		}
		
		private void attach_PMemPhoneLists(PMemPhoneList entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = this;
		}
		
		private void detach_PMemPhoneLists(PMemPhoneList entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = null;
		}
		
		private void attach_FinishedProjects(FinishedProject entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = this;
		}
		
		private void detach_FinishedProjects(FinishedProject entity)
		{
			this.SendPropertyChanging();
			entity.ProjectMember = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tasks")]
	public partial class Tasks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TNo;
		
		private int _PNo;
		
		private string _TName;
		
		private string _TDesc;
		
		private System.Nullable<System.DateTime> _TDeadline;
		
		private EntitySet<WorksOn> _WorksOns;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTNoChanging(int value);
    partial void OnTNoChanged();
    partial void OnPNoChanging(int value);
    partial void OnPNoChanged();
    partial void OnTNameChanging(string value);
    partial void OnTNameChanged();
    partial void OnTDescChanging(string value);
    partial void OnTDescChanged();
    partial void OnTDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnTDeadlineChanged();
    #endregion
		
		public Tasks()
		{
			this._WorksOns = new EntitySet<WorksOn>(new Action<WorksOn>(this.attach_WorksOns), new Action<WorksOn>(this.detach_WorksOns));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TNo
		{
			get
			{
				return this._TNo;
			}
			set
			{
				if ((this._TNo != value))
				{
					this.OnTNoChanging(value);
					this.SendPropertyChanging();
					this._TNo = value;
					this.SendPropertyChanged("TNo");
					this.OnTNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNo", DbType="Int NOT NULL")]
		public int PNo
		{
			get
			{
				return this._PNo;
			}
			set
			{
				if ((this._PNo != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPNoChanging(value);
					this.SendPropertyChanging();
					this._PNo = value;
					this.SendPropertyChanged("PNo");
					this.OnPNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TName
		{
			get
			{
				return this._TName;
			}
			set
			{
				if ((this._TName != value))
				{
					this.OnTNameChanging(value);
					this.SendPropertyChanging();
					this._TName = value;
					this.SendPropertyChanged("TName");
					this.OnTNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDesc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TDesc
		{
			get
			{
				return this._TDesc;
			}
			set
			{
				if ((this._TDesc != value))
				{
					this.OnTDescChanging(value);
					this.SendPropertyChanging();
					this._TDesc = value;
					this.SendPropertyChanged("TDesc");
					this.OnTDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDeadline", DbType="Date")]
		public System.Nullable<System.DateTime> TDeadline
		{
			get
			{
				return this._TDeadline;
			}
			set
			{
				if ((this._TDeadline != value))
				{
					this.OnTDeadlineChanging(value);
					this.SendPropertyChanging();
					this._TDeadline = value;
					this.SendPropertyChanged("TDeadline");
					this.OnTDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tasks_WorksOn", Storage="_WorksOns", ThisKey="TNo", OtherKey="TNo")]
		public EntitySet<WorksOn> WorksOns
		{
			get
			{
				return this._WorksOns;
			}
			set
			{
				this._WorksOns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Tasks", Storage="_Project", ThisKey="PNo", OtherKey="PNo", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._PNo = value.PNo;
					}
					else
					{
						this._PNo = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorksOns(WorksOn entity)
		{
			this.SendPropertyChanging();
			entity.Tasks = this;
		}
		
		private void detach_WorksOns(WorksOn entity)
		{
			this.SendPropertyChanging();
			entity.Tasks = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinishedProject")]
	public partial class FinishedProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PNo;
		
		private string _PName;
		
		private int _PBudget;
		
		private string _PDesc;
		
		private System.DateTime _PDeadline;
		
		private System.Nullable<int> _ProjectLeaderPNR;
		
		private EntityRef<ProjectMember> _ProjectMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPNoChanging(int value);
    partial void OnPNoChanged();
    partial void OnPNameChanging(string value);
    partial void OnPNameChanged();
    partial void OnPBudgetChanging(int value);
    partial void OnPBudgetChanged();
    partial void OnPDescChanging(string value);
    partial void OnPDescChanged();
    partial void OnPDeadlineChanging(System.DateTime value);
    partial void OnPDeadlineChanged();
    partial void OnProjectLeaderPNRChanging(System.Nullable<int> value);
    partial void OnProjectLeaderPNRChanged();
    #endregion
		
		public FinishedProject()
		{
			this._ProjectMember = default(EntityRef<ProjectMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PNo
		{
			get
			{
				return this._PNo;
			}
			set
			{
				if ((this._PNo != value))
				{
					this.OnPNoChanging(value);
					this.SendPropertyChanging();
					this._PNo = value;
					this.SendPropertyChanged("PNo");
					this.OnPNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PName
		{
			get
			{
				return this._PName;
			}
			set
			{
				if ((this._PName != value))
				{
					this.OnPNameChanging(value);
					this.SendPropertyChanging();
					this._PName = value;
					this.SendPropertyChanged("PName");
					this.OnPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBudget", DbType="Int NOT NULL")]
		public int PBudget
		{
			get
			{
				return this._PBudget;
			}
			set
			{
				if ((this._PBudget != value))
				{
					this.OnPBudgetChanging(value);
					this.SendPropertyChanging();
					this._PBudget = value;
					this.SendPropertyChanged("PBudget");
					this.OnPBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDesc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string PDesc
		{
			get
			{
				return this._PDesc;
			}
			set
			{
				if ((this._PDesc != value))
				{
					this.OnPDescChanging(value);
					this.SendPropertyChanging();
					this._PDesc = value;
					this.SendPropertyChanged("PDesc");
					this.OnPDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDeadline", DbType="Date NOT NULL")]
		public System.DateTime PDeadline
		{
			get
			{
				return this._PDeadline;
			}
			set
			{
				if ((this._PDeadline != value))
				{
					this.OnPDeadlineChanging(value);
					this.SendPropertyChanging();
					this._PDeadline = value;
					this.SendPropertyChanged("PDeadline");
					this.OnPDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectLeaderPNR", DbType="Int")]
		public System.Nullable<int> ProjectLeaderPNR
		{
			get
			{
				return this._ProjectLeaderPNR;
			}
			set
			{
				if ((this._ProjectLeaderPNR != value))
				{
					if (this._ProjectMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectLeaderPNRChanging(value);
					this.SendPropertyChanging();
					this._ProjectLeaderPNR = value;
					this.SendPropertyChanged("ProjectLeaderPNR");
					this.OnProjectLeaderPNRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMember_FinishedProject", Storage="_ProjectMember", ThisKey="ProjectLeaderPNR", OtherKey="PNR", IsForeignKey=true)]
		public ProjectMember ProjectMember
		{
			get
			{
				return this._ProjectMember.Entity;
			}
			set
			{
				ProjectMember previousValue = this._ProjectMember.Entity;
				if (((previousValue != value) 
							|| (this._ProjectMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectMember.Entity = null;
						previousValue.FinishedProjects.Remove(this);
					}
					this._ProjectMember.Entity = value;
					if ((value != null))
					{
						value.FinishedProjects.Add(this);
						this._ProjectLeaderPNR = value.PNR;
					}
					else
					{
						this._ProjectLeaderPNR = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProjectMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinishedTasks")]
	public partial class FinishedTasks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TNo;
		
		private System.Nullable<int> _PNo;
		
		private string _TName;
		
		private string _TDesc;
		
		private System.Nullable<System.DateTime> _TDeadline;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTNoChanging(int value);
    partial void OnTNoChanged();
    partial void OnPNoChanging(System.Nullable<int> value);
    partial void OnPNoChanged();
    partial void OnTNameChanging(string value);
    partial void OnTNameChanged();
    partial void OnTDescChanging(string value);
    partial void OnTDescChanged();
    partial void OnTDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnTDeadlineChanged();
    #endregion
		
		public FinishedTasks()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TNo
		{
			get
			{
				return this._TNo;
			}
			set
			{
				if ((this._TNo != value))
				{
					this.OnTNoChanging(value);
					this.SendPropertyChanging();
					this._TNo = value;
					this.SendPropertyChanged("TNo");
					this.OnTNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNo", DbType="Int")]
		public System.Nullable<int> PNo
		{
			get
			{
				return this._PNo;
			}
			set
			{
				if ((this._PNo != value))
				{
					this.OnPNoChanging(value);
					this.SendPropertyChanging();
					this._PNo = value;
					this.SendPropertyChanged("PNo");
					this.OnPNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TName
		{
			get
			{
				return this._TName;
			}
			set
			{
				if ((this._TName != value))
				{
					this.OnTNameChanging(value);
					this.SendPropertyChanging();
					this._TName = value;
					this.SendPropertyChanged("TName");
					this.OnTNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDesc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TDesc
		{
			get
			{
				return this._TDesc;
			}
			set
			{
				if ((this._TDesc != value))
				{
					this.OnTDescChanging(value);
					this.SendPropertyChanging();
					this._TDesc = value;
					this.SendPropertyChanged("TDesc");
					this.OnTDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDeadline", DbType="Date")]
		public System.Nullable<System.DateTime> TDeadline
		{
			get
			{
				return this._TDeadline;
			}
			set
			{
				if ((this._TDeadline != value))
				{
					this.OnTDeadlineChanging(value);
					this.SendPropertyChanging();
					this._TDeadline = value;
					this.SendPropertyChanged("TDeadline");
					this.OnTDeadlineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class usp_GetErrorMessageResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _ErrorMessage;
		
		public usp_GetErrorMessageResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
	}
	
	public partial class getCurrentUserResult
	{
		
		private int _PNR;
		
		private string _Forename;
		
		private string _Surname;
		
		private string _MUsername;
		
		private string _MPassword;
		
		private string _MRole;
		
		private string _PasswordSalt;
		
		private string _UserType;
		
		public getCurrentUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNR", DbType="Int NOT NULL")]
		public int PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this._PNR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forename", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Forename
		{
			get
			{
				return this._Forename;
			}
			set
			{
				if ((this._Forename != value))
				{
					this._Forename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUsername", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MUsername
		{
			get
			{
				return this._MUsername;
			}
			set
			{
				if ((this._MUsername != value))
				{
					this._MUsername = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPassword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MPassword
		{
			get
			{
				return this._MPassword;
			}
			set
			{
				if ((this._MPassword != value))
				{
					this._MPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRole", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MRole
		{
			get
			{
				return this._MRole;
			}
			set
			{
				if ((this._MRole != value))
				{
					this._MRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this._PasswordSalt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
	}
	
	public partial class getPMemPhoneListResult
	{
		
		private int _PNR;
		
		private int _PhoneNr;
		
		public getPMemPhoneListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNR", DbType="Int NOT NULL")]
		public int PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this._PNR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNr", DbType="Int NOT NULL")]
		public int PhoneNr
		{
			get
			{
				return this._PhoneNr;
			}
			set
			{
				if ((this._PhoneNr != value))
				{
					this._PhoneNr = value;
				}
			}
		}
	}
	
	public partial class getProjectMemberResult
	{
		
		private int _PNR;
		
		private string _Forename;
		
		private string _Surname;
		
		private string _MUsername;
		
		private string _MPassword;
		
		private string _MRole;
		
		private string _PasswordSalt;
		
		private string _UserType;
		
		public getProjectMemberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNR", DbType="Int NOT NULL")]
		public int PNR
		{
			get
			{
				return this._PNR;
			}
			set
			{
				if ((this._PNR != value))
				{
					this._PNR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Forename", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Forename
		{
			get
			{
				return this._Forename;
			}
			set
			{
				if ((this._Forename != value))
				{
					this._Forename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUsername", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MUsername
		{
			get
			{
				return this._MUsername;
			}
			set
			{
				if ((this._MUsername != value))
				{
					this._MUsername = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MPassword", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MPassword
		{
			get
			{
				return this._MPassword;
			}
			set
			{
				if ((this._MPassword != value))
				{
					this._MPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRole", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MRole
		{
			get
			{
				return this._MRole;
			}
			set
			{
				if ((this._MRole != value))
				{
					this._MRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this._PasswordSalt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
	}
	
	public partial class updateWorksOnResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _ErrorMessage;
		
		public updateWorksOnResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
	}
	
	public partial class getHighestTnoResult1
	{
		
		private System.Nullable<int> _Column1;
		
		public getHighestTnoResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class getHighestPnoResult
	{
		
		private System.Nullable<int> _Column1;
		
		public getHighestPnoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
